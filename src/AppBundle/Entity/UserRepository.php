<?php

namespace AppBundle\Entity;
use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    const REPOSITORY = 'AppBundle:User';

    /**
     * Get findOneUserByField
     *
     * @return array
     */
    public function findOneUserByField($message, $field)
    {
        $result = $this->getEntityManager()
            ->getRepository($this::REPOSITORY)
            ->find($field);

        if (!$result)
        {
            return array('message'  => $message . $field);
        }
        else
        {
            return array('result'  => $result);
        }
    }

    /**
     * Get findAllUsers
     *
     * @return array
     */
    public function findAllUsers($message)
    {
        $prospects = $this->getEntityManager()
            ->createQuery(
                'SELECT u.id, u.email, u.roles, u.status, 
                i.firstName, i.lastName
                FROM AppBundle:User u,
                AppBundle:Information i
                WHERE u.id = i.user'
            )
            ->getResult();

        $employees = $this->getEntityManager()
            ->createQuery(
                'SELECT u.id, u.email, u.roles, u.status 
                FROM AppBundle:User u WHERE 
                u.roles = \'["EMPLOYEE"]\''
            )
            ->getResult();

        $result = "";

        if ( $prospects && $employees )
        {
            $result = array_merge( $prospects, $employees );
        }
        elseif ( $prospects )
        {
            $result = $prospects;
        }
        elseif ( $employees )
        {
            $result = $employees;
        }

        if (!$result)
        {
            return array('message'  => $message);
        }
        else
        {
            return array('result'  => $result);
        }
    }

    /**
     * Get findOneUserByField
     *
     * @return array
     */
    public function findUserWithInfo($message, $id)
    {
        $user = $this->getEntityManager()
            ->getRepository($this::REPOSITORY)
            ->find($id);

        if (!$user)
        {
            return array('message'  => $message . id);
        }
        else
        {
            $result = array();

            $result['user'] = $user;

            // Photo of Users
            $photo = $this->getEntityManager()
                ->getRepository('AppBundle:Photo')
                ->findOneByUser($id);

            if($photo)
            {
                $result['photo'] = $photo;
            }

            if($user->arrayToStringRoles($user->getRoles()) == "PROSPECT")
            {
                $information = $this->getEntityManager()
                    ->getRepository('AppBundle:Information')
                    ->findOneByUser($id);

                if($information)
                {
                    $result['information'] = $information;
                }
            }

            return $result;
        }
    }

    /**
     * Get textStatus
     *
     * @return string
     */
    public function getTextStatus($status)
    {
        if($status==0)
        {
            return "Inactivo";
        }
        elseif($status==1)
        {
            return "Activo";
        }
        elseif($status==2)
        {
            return "Borrado";
        }
    }
}